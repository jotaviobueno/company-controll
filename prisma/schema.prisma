// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Access {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  provider  AccessProvider
  token     String         @unique
  createdAt DateTime       @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime       @default(now()) @map("updated_at") @db.Timestamp
  Person    Person?
}

enum AccessProvider {
  GOOGLE
  ACCESS_DEV
}

model Person {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  username      String
  email         String?
  phone         String?
  avatarUrl     String          @map("avatar_url")
  access        Access          @relation(fields: [accessId], references: [id])
  accessId      String          @unique @map("access_id") @db.ObjectId
  createdAt     DateTime        @default(now()) @map("created_at") @db.Timestamp
  updatedAt     DateTime        @default(now()) @map("updated_at") @db.Timestamp
  deletedAt     DateTime?       @map("deleted_at") @db.Timestamp
  PersonCompany PersonCompany[]
  PersonRole    PersonRole[]
  PersonAddress PersonAddress[]
}

model PersonCompany {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  person    Person   @relation(fields: [personId], references: [id])
  personId  String   @map("person_id") @db.ObjectId
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp
}

model Address {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  street         String
  number         String
  neighborhood   String
  city           String
  zipCode        Int              @map("zip_code")
  state          String
  createdAt      DateTime         @default(now()) @map("created_at") @db.Timestamp
  updatedAt      DateTime         @default(now()) @map("updated_at") @db.Timestamp
  deletedAt      DateTime?        @map("deleted_at") @db.Timestamp
  CompanyAddress CompanyAddress[]
  PersonAddress  PersonAddress[]
}

model PersonRole {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  person    Person   @relation(fields: [personId], references: [id])
  personId  String   @map("person_id") @db.ObjectId
  role      Role     @relation(fields: [roleId], references: [id])
  roleId    String   @map("role_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp
}

model Company {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  cnpj            String
  corporateName   String            @map("corporate_name")
  status          String
  sector          String?
  createdAt       DateTime          @default(now()) @map("created_at") @db.Timestamp
  updatedAt       DateTime          @default(now()) @map("updated_at") @db.Timestamp
  deletedAt       DateTime?         @map("deleted_at") @db.Timestamp
  PersonCompany   PersonCompany[]
  CompanyAddress  CompanyAddress[]
  Product         Product[]
  Customer        Customer[]
  CustomerCompany CustomerCompany[]
}

model CompanyAddress {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  company   Company   @relation(fields: [companyId], references: [id])
  companyId String    @map("company_id") @db.ObjectId
  address   Address   @relation(fields: [addressId], references: [id])
  addressId String    @map("address_id") @db.ObjectId
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp
}

model PersonAddress {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  person    Person    @relation(fields: [personId], references: [id])
  personId  String    @map("person_id") @db.ObjectId
  address   Address   @relation(fields: [addressId], references: [id])
  addressId String    @map("address_id") @db.ObjectId
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt DateTime? @map("deleted_at") @db.Timestamp
}

model Role {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  description    String?
  createdAt      DateTime         @default(now()) @map("created_at") @db.Timestamp
  updatedAt      DateTime         @default(now()) @map("updated_at") @db.Timestamp
  PersonRole     PersonRole[]
  rolePermission RolePermission[]
}

model RolePermission {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String     @map("permission_id") @db.ObjectId
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       String     @map("role_id") @db.ObjectId
  createdAt    DateTime   @default(now()) @map("created_at") @db.Timestamp
  updatedAt    DateTime   @default(now()) @map("updated_at") @db.Timestamp
}

model Permission {
  id             String           @id @default(auto()) @map("_id") @db.ObjectId
  name           String           @unique
  createdAt      DateTime         @default(now()) @map("created_at") @db.Timestamp
  updatedAt      DateTime         @default(now()) @map("updated_at") @db.Timestamp
  RolePermission RolePermission[]
}

model Product {
  id                 String    @id @default(auto()) @map("_id") @db.ObjectId
  name               String
  unitPrice          Int
  discountPercentage Int?      @map("discount_percentage")
  imagesUrl          String[]  @default([]) @map("images_url")
  company            Company   @relation(fields: [companyId], references: [id])
  companyId          String    @map("company_id") @db.ObjectId
  createdAt          DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt          DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt          DateTime? @map("deleted_at") @db.Timestamp
}

model CustomerCompany {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  company    Company  @relation(fields: [companyId], references: [id])
  companyId  String   @map("company_id") @db.ObjectId
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String   @map("customer_id") @db.ObjectId
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime @default(now()) @map("updated_at") @db.Timestamp
}

model Customer {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  cpf             String?
  email           String?
  company         Company           @relation(fields: [companyId], references: [id])
  companyId       String            @map("company_id") @db.ObjectId
  createdAt       DateTime          @default(now()) @map("created_at") @db.Timestamp
  updatedAt       DateTime          @default(now()) @map("updated_at") @db.Timestamp
  deletedAt       DateTime?         @map("deleted_at") @db.Timestamp
  CustomerCompany CustomerCompany[]
}
