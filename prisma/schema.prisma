// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Access {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  provider  AccessProvider
  token     String         @unique
  createdAt DateTime       @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime       @default(now()) @map("updated_at") @db.Timestamp
  Person    Person?
}

enum AccessProvider {
  GOOGLE
  ACCESS_DEV
}

model Person {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  username      String
  email         String?
  phone         String?
  avatarUrl     String          @map("avatar_url")
  access        Access          @relation(fields: [accessId], references: [id])
  accessId      String          @unique @map("access_id") @db.ObjectId
  createdAt     DateTime        @default(now()) @map("created_at") @db.Timestamp
  updatedAt     DateTime        @default(now()) @map("updated_at") @db.Timestamp
  deletedAt     DateTime?       @map("deleted_at") @db.Timestamp
  PersonCompany PersonCompany[]
}

model PersonCompany {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  person    Person   @relation(fields: [personId], references: [id])
  personId  String   @map("person_id") @db.ObjectId
  company   Company  @relation(fields: [companyId], references: [id])
  companyId String   @map("company_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp
}

model Company {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  cnpj          Int
  corporateName String          @map("corporate_name")
  status        String
  sector        String?
  createdAt     DateTime        @default(now()) @map("created_at") @db.Timestamp
  updatedAt     DateTime        @default(now()) @map("updated_at") @db.Timestamp
  deletedAt     DateTime?       @map("deleted_at") @db.Timestamp
  PersonCompany PersonCompany[]
}

model Address {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  street     String
  number     String
  neighboord String
  city       String
  zipCode    Int       @map("zip_code")
  state      String
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt  DateTime  @default(now()) @map("updated_at") @db.Timestamp
  deletedAt  DateTime? @map("deleted_at") @db.Timestamp
}
