# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PersonEntity {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  username: String!
  email: String
  phone: String
  avatarUrl: String!
  roles: [RoleEntity!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type CompanyEntity {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  cnpj: Int!
  corporateName: String!
  status: String!
  sector: String!
}

type PersonCompanyEntity {
type PersonRoleEntity {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type RoleEntity {
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  description: String!
}

type Query {
  whoAmI: PersonEntity!
  findAllPerson(PaginationOptionsInput: PaginationOptionsInput!): [PersonEntity!]!
  findOnePerson(personId: IdInput!): PersonEntity!
  findAllCompany(paginationOptionsInput: PaginationOptionsInput!): [CompanyEntity!]!
  findOneCompany(companyId: IdInput!): CompanyEntity!
  findAllPersonCompany(PaginationOptionsInput: PaginationOptionsInput!): [PersonCompanyEntity!]!
  findOnePersonCompany(personCompanyId: IdInput!): PersonCompanyEntity!
  findAllRoles(paginationOptionsInput: PaginationOptionsInput!): [RoleEntity!]!
  findOneRole(roleId: IdInput!): RoleEntity!
}

input PaginationOptionsInput {
  page: Int = 1
  per_page: Int = 10
}

input IdInput {
  id: String!
}

type Mutation {
  createAccess(createAccessInput: CreateAccessInput!): String!
  createAccessForDev: String!
  updatePerson(updatePersonInput: UpdatePersonInput!): PersonEntity!
  removePerson(personId: IdInput!): Boolean!
  createCompany(createCompanyInput: CreateCompanyInput!): CompanyEntity!
  updateCompany(updateCompanyInput: UpdateCompanyInput!): CompanyEntity!
  removeCompany(companyId: IdInput!): CompanyEntity!
  assignPersonRole(personRoleInput: PersonRoleInput!): PersonRoleEntity!
  removePersonRole(personRoleInput: PersonRoleInput!): PersonRoleEntity!
  updateRole(updateRoleInput: UpdateRoleInput!): RoleEntity!
}

input CreateAccessInput {
  provider: AccessProvider!
  code: String!
}

enum AccessProvider {
  GOOGLE
  ACCESS_DEV
}

input UpdatePersonInput {
  name: String
  username: String
  email: String
  phone: String
  avatarUrl: String
  id: String!
}

input CreateCompanyInput {
  cnpj: Int!
  corporateName: String
  status: String
  sector: String
}

input UpdateCompanyInput {
  cnpj: Int
  corporateName: String
  status: String
  sector: String
  id: String!
input PersonRoleInput {
  personId: String!
  roleId: String!
}

input UpdateRoleInput {
  id: String!
  name: String
  descriptions: String
}